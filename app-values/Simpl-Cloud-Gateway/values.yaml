server-port: &server-port 9000
replicaCount: 1
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

global:
   profile: authority
   ingress:
     issuer: dev-prod

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1001

service:
  type: ClusterIP
  port: *server-port

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 500m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 1Gi

livenessProbe:
  httpGet:
    path: "/actuator/health/liveness"
    port: *server-port
  initialDelaySeconds: 120
  periodSeconds: 5
  failureThreshold: 10
readinessProbe:
  httpGet:
    path: "/actuator/health/readiness"
    port: *server-port
  initialDelaySeconds: 120
  periodSeconds: 5
  failureThreshold: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: spring-config
    configMap:
      name: simpl-cloud-gateway-spring-configmap

volumeMounts:
  - name: spring-config
    mountPath: /config/

envFrom:
  - configMapRef:
      name: simpl-cloud-gateway-env-configmap

nodeSelector: {}

tolerations: []

affinity: {}

# Spring Cloud Gateway Routes
springRoutes: []


# Custom Role Based Access Control
# This is a complete example, if you omit method, all are matched.
#routes:
#  publicUrls:
#    - method: GET
#      path: "/swagger-ui.html"
#  deniedUrls:
#    - method: GET
#      path: "todeny"
#  rbac:
#    - path: "rbacPath"
#      roles:
#        - NOTARY
#        - T1UAR_M
routes: {}
# Springdoc Swagger-UI
swaggerUrls: []