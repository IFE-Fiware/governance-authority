profile: authority

# Spring Cloud Gateway Routes Authority
appConfig:
  spring:
    cloud:
      gateway:
        routes:
          - id: keycloak
            uri: ${keycloak.url}
            predicates:
              - Path=/auth/**
            filters:
              - StripPrefix=1
          - id: users-rolesV1
            uri: ${users-roles.url}
            predicates:
              - Path=/userApi/**
            filters:
              - StripPrefix=1
          - id: onboardingV1
            uri: ${onboarding.url}
            predicates:
              - Path=/onboardingApi/**
            filters:
              - StripPrefix=1
          - id: sapV1
            uri: ${sap.url}
            predicates:
              - Path=/sapApi/**
            filters:
              - StripPrefix=1
          - id: identity-providerV1
            uri: ${identity-provider.url}
            predicates:
              - Path=/identityApi/**
            filters:
              - StripPrefix=1
          - id: authentication-providerV1
            uri: ${authentication-provider.url}
            predicates:
              - Path=/authApi/**
            filters:
              - StripPrefix=1
          - id: ocsp
            uri: ${ejbca.url}
            predicates:
              - Path=/ocsp
            filters:
              - RewritePath=/ocsp/*, /ejbca/publicweb/status/ocsp
          - id: ca-certificates
            uri: ${ejbca.url}
            predicates:
              - Path=/ca/*
            filters:
              - RewritePath=/ca/?(?<segment>.*), /ejbca/publicweb/webdist/certdist?cmd=cacert&issuer=CN%3D$\{segment}
          - id: crl
            uri: ${ejbca.url}
            predicates:
              - Path=/crl/*
            filters:
              - RewritePath=/crl/?(?<segment>.*), /ejbca/publicweb/webdist/certdist?cmd=crl&issuer=CN%3D$\{segment}
  
          # CLI configurations
          - id: cli-authentication-providerV1
            uri: ${authentication-provider.url}
            predicates:
              - Path=
                /cli/authApi/v1/csr/generate,
                /cli/authApi/v1/keypairs/generate,
                /cli/authApi/v1/keypairs,
                /cli/authApi/v1/credentials,
                /cli/authApi/v1/credentials/download,
                /cli/authApi/v1/agent/ping
            filters:
              - StripPrefix=2
              - name: ClientCredentialsFilter
                args:
                  # Here you specify the clientid and the required client role to invoke this api
                  # in the following order: 
                  # client-id-name: client-role-1, client-role-1
                  # The default configuration is shown below.
                  cli: cli-role

          - id: cli-identity-providerV1
            uri: ${identity-provider.url}
            predicates:
              - Path=
                /cli/identityApi/v1/participants/*/csr,
                /cli/identityApi/v1/participants,
                /cli/identityApi/v1/participants/authorityExists,
                /cli/identityApi/v1/credentials/*/download
            filters:
              - StripPrefix=2
              - name: ClientCredentialsFilter
                args:
                  # Here you specify the clientid and the required client role to invoke this api
                  # in the following order: 
                  # client-id-name: client-role-1, client-role-1
                  # The default configuration is shown below.
                  cli: cli-role

          - id: cli-security-attributes-providerV1
            uri: ${sap.url}
            predicates:
              - Path=
                /cli/sapApi/v1/identityAttributes/import,
                /cli/sapApi/v1/identityAttributes/addParticipantType/*
            filters:
              - StripPrefix=2
              - name: ClientCredentialsFilter
                args:
                  # Here you specify the clientid and the required client role to invoke this api
                  # in the following order: 
                  # client-id-name: client-role-1, client-role-1
                  # The default configuration is shown below.
                  cli: cli-role

          - id: cli-users-and-rolesV1
            uri: ${users-roles.url}
            predicates:
              - Path=
                /cli/userApi/v1/users/import,
                /cli/userApi/v1/roles/import,
                /cli/userApi/v1/roles/*/identityAttributes
            filters:
              - StripPrefix=2
              - name: ClientCredentialsFilter
                args:
                  # Here you specify the clientid and the required client role to invoke this api
                  # in the following order: 
                  # client-id-name: client-role-1, client-role-1
                  # The default configuration is shown below.
                  cli: cli-role
    
  springdoc:
    swagger-ui:
      urls:
        - url: /sapApi/openapi/securityattributesprovider-v1.yaml
          name: Security Attributes Provider Service V1
        - url: /onboardingApi/openapi/onboarding-v1.yaml
          name: Onboarding Service V1
        - url: /userApi/openapi/usersroles-v1.yaml
          name: Users & Roles Service V1
        - url: /identityApi/openapi/identityprovider-v1.yaml
          name: Identity Provider Service V1
        - url: /authApi/openapi/authenticationprovider-v1.yaml
          name: Authentication Provider Service V1
        - url: /openapi/tier1gateway-v1.yaml
          name: Application Info V1
  
  keycloak:
    app:
      realm: authority
  
  routes: 
    public-urls:
      - method: "GET"
        path: "/actuator/health/**"
      - method: "GET"
        path: "/authApi/v1/credentials"
      - method: "GET"
        path: "/authApi/v1/info/version"
      - method: "GET"
        path: "/ca/**"
      - method: "GET"
        path: "/crl/**"
      - method: "GET"
        path: "/identityApi/v1/info/version"
      - method: "POST"
        path: "/ocsp"
      - method: "GET"
        path: "/onboardingApi/v1/info/version"
      - method: "POST"
        path: "/onboardingApi/v1/onboardingRequests"
      - method: "GET"
        path: "/onboardingApi/v1/participantTypes"
      - method: "GET"
        path: "/sapApi/v1/info/version"
      - method: "GET"
        path: "/userApi/v1/info/version"
    denied-urls:
      - method: "POST"
        path: "/authApi/v1/agent/credentials/validate"
      - method: "GET"
        path: "/authApi/v1/agent/ephemeralProof"
      - method: "GET"
        path: "/authApi/v1/keypairs"
      - method: "POST"
        path: "/authApi/v1/mtls/ephemeralProof"
      - method: "GET"
        path: "/authApi/v1/mtls/ping"
      - method: "POST"
        path: "/authApi/v1/sessions/credentials"
      - method: "GET"
        path: "/authApi/v1/sessions/identityAttributes"
      - method: "GET"
        path: "/identityApi/v1/mtls/credentials"
      - method: "GET"
        path: "/identityApi/v1/mtls/echo"
      - method: "PATCH"
        path: "/identityApi/v1/mtls/publicKey"
      - method: "POST"
        path: "/identityApi/v1/mtls/token"
      - method: "GET"
        path: "/identityApi/v1/mtls/whoami"
      - method: "POST"
        path: "/identityApi/v1/participants"
      - method: "GET"
        path: "/sapApi/v1/mtls/identityAttributes"
      - method: "GET"
        path: "/sapApi/v1/mtls/identityAttributes/{credentialId}"
    rbac:
      - method: "GET"
        path: "/authApi/v1/agent/identityAttributes"
        roles:
          - "T1UAR_M"
      - method: "GET"
        path: "/authApi/v1/agent/identityAttributes/{credentialId}"
        roles:
          - "T1UAR_M"
      - method: "DELETE"
        path: "/authApi/v1/credentials"
        roles:
          - "ONBOARDER_M"
      - method: "POST"
        path: "/authApi/v1/credentials"
        roles:
          - "ONBOARDER_M"
      - method: "POST"
        path: "/authApi/v1/csr/generate"
        roles:
          - "ONBOARDER_M"
      - method: "GET"
        path: "/authApi/v1/identityAttributes"
        roles:
          - "T1UAR_M"
          - "NOTARY"
          - "IATTR_M"
      - method: "HEAD"
        path: "/authApi/v1/keypairs"
        roles:
          - "ONBOARDER_M"
      - method: "POST"
        path: "/authApi/v1/keypairs"
        roles:
          - "ONBOARDER_M"
      - method: "POST"
        path: "/authApi/v1/keypairs/generate"
        roles:
          - "ONBOARDER_M"
      - method: "DELETE"
        path: "/identityApi/v1/credentials/{id}"
        roles:
          - "IATTR_M"
      - method: "GET"
        path: "/identityApi/v1/credentials/{id}"
        roles:
          - "IATTR_M"
      - method: "PATCH"
        path: "/identityApi/v1/credentials/{id}"
        roles:
          - "IATTR_M"
      - method: "GET"
        path: "/identityApi/v1/credentials/{id}/download"
        roles:
          - "APPLICANT"
      - method: "POST"
        path: "/identityApi/v1/credentials/{id}/renew"
        roles:
          - "IATTR_M"
      - method: "GET"
        path: "/identityApi/v1/participants"
        roles:
          - "IATTR_M"
      - method: "GET"
        path: "/identityApi/v1/participants/{participantId}"
        roles:
          - "IATTR_M"
      - method: "GET"
        path: "/onboardingApi/v1/mimeTypes"
        roles:
          - "T2IAA_M"
      - method: "POST"
        path: "/onboardingApi/v1/mimeTypes"
        roles:
          - "T2IAA_M"
      - method: "GET"
        path: "/onboardingApi/v1/mimeTypes/supported"
        roles:
          - "T2IAA_M"
      - method: "DELETE"
        path: "/onboardingApi/v1/mimeTypes/{mimeTypeId}"
        roles:
          - "T2IAA_M"
      - method: "GET"
        path: "/onboardingApi/v1/mimeTypes/{mimeTypeId}"
        roles:
          - "T2IAA_M"
      - method: "PUT"
        path: "/onboardingApi/v1/mimeTypes/{mimeTypeId}"
        roles:
          - "T2IAA_M"
      - method: "GET"
        path: "/onboardingApi/v1/onboardingProcedureTemplates"
        roles:
          - "T2IAA_M"
      - method: "POST"
        path: "/onboardingApi/v1/onboardingProcedureTemplates"
        roles:
          - "T2IAA_M"
      - method: "DELETE"
        path: "/onboardingApi/v1/onboardingProcedureTemplates/{onboardingProcedureTemplateId}"
        roles:
          - "T2IAA_M"
      - method: "GET"
        path: "/onboardingApi/v1/onboardingProcedureTemplates/{onboardingProcedureTemplateId}"
        roles:
          - "T2IAA_M"
      - method: "PUT"
        path: "/onboardingApi/v1/onboardingProcedureTemplates/{onboardingProcedureTemplateId}"
        roles:
          - "T2IAA_M"
      - method: "GET"
        path: "/onboardingApi/v1/onboardingProcedureTemplates/{onboardingProcedureTemplateId}/identityAttributes"
        roles:
          - "T2IAA_M"
      - method: "PUT"
        path: "/onboardingApi/v1/onboardingProcedureTemplates/{onboardingProcedureTemplateId}/identityAttributes"
        roles:
          - "T2IAA_M"
      - method: "GET"
        path: "/onboardingApi/v1/onboardingProcedureTemplates/{onboardingProcedureTemplateId}/validationRules"
        roles:
          - "T2IAA_M"
      - method: "POST"
        path: "/onboardingApi/v1/onboardingProcedureTemplates/{onboardingProcedureTemplateId}/validationRules"
        roles:
          - "T2IAA_M"
      - method: "PUT"
        path: "/onboardingApi/v1/onboardingProcedureTemplates/{onboardingProcedureTemplateId}/validationRules"
        roles:
          - "T2IAA_M"
      - method: "DELETE"
        path: "/onboardingApi/v1/onboardingProcedureTemplates/{onboardingProcedureTemplateId}/validationRules/{validationRuleId}"
        roles:
          - "T2IAA_M"
      - method: "GET"
        path: "/onboardingApi/v1/onboardingProcedureTemplates/{onboardingProcedureTemplateId}/validationRules/{validationRuleId}"
        roles:
          - "T2IAA_M"
      - method: "PUT"
        path: "/onboardingApi/v1/onboardingProcedureTemplates/{onboardingProcedureTemplateId}/validationRules/{validationRuleId}"
        roles:
          - "T2IAA_M"
      - method: "GET"
        path: "/onboardingApi/v1/onboardingRequests"
        roles:
          - "APPLICANT"
          - "NOTARY"
      - method: "GET"
        path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}"
        roles:
          - "APPLICANT"
          - "NOTARY"
      - method: "POST"
        path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/approve"
        roles:
          - "NOTARY"
      - method: "POST"
        path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/comments"
        roles:
          - "APPLICANT"
          - "NOTARY"
      - method: "PATCH"
        path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/documents"
        roles:
          - "APPLICANT"
      - method: "POST"
        path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/documents"
        roles:
          - "NOTARY"
      - method: "DELETE"
        path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/documents/{documentId}"
        roles:
          - "APPLICANT"
      - method: "GET"
        path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/documents/{documentId}"
        roles:
          - "APPLICANT"
          - "NOTARY"
      - method: "POST"
        path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/evaluateFaultRules"
        roles:
          - "NOTARY"
      - method: "PATCH"
        path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/expirationTimeframe"
        roles:
          - "NOTARY"
      - method: "GET"
        path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/identityAttributes"
        roles:
          - "NOTARY"
      - method: "PUT"
        path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/identityAttributes"
        roles:
          - "NOTARY"
      - method: "POST"
        path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/reject"
        roles:
          - "NOTARY"
      - method: "POST"
        path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/requestRevision"
        roles:
          - "NOTARY"
      - method: "POST"
        path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/submit"
        roles:
          - "APPLICANT"
      - method: "GET"
        path: "/onboardingApi/v1/onboardingStatus"
        roles:
          - "APPLICANT"
          - "NOTARY"
      - method: "PATCH"
        path: "/onboardingApi/v1/onboardingStatus/{onboardingStatusId}"
        roles:
          - "T2IAA_M"
      - method: "GET"
        path: "/sapApi/v1/identityAttributes"
        roles:
          - "T1UAR_M"
          - "NOTARY"
          - "IATTR_M"
          - "T2IAA_M"
      - method: "POST"
        path: "/sapApi/v1/identityAttributes"
        roles:
          - "IATTR_M"
      - method: "PUT"
        path: "/sapApi/v1/identityAttributes/assignable/{value}"
        roles:
          - "IATTR_M"
      - method: "DELETE"
        path: "/sapApi/v1/identityAttributes/{id}"
        roles:
          - "IATTR_M"
      - method: "GET"
        path: "/sapApi/v1/identityAttributes/{id}"
        roles:
          - "IATTR_M"
          - "NOTARY"
      - method: "PUT"
        path: "/sapApi/v1/identityAttributes/{id}"
        roles:
          - "IATTR_M"
      - method: "POST"
        path: "/sapApi/v1/participants/{participantId}/identityAttributes/assign"
        roles:
          - "NOTARY"
          - "IATTR_M"
      - method: "POST"
        path: "/sapApi/v1/participants/{participantId}/identityAttributes/unassign"
        roles:
          - "NOTARY"
          - "IATTR_M"
      - method: "GET"
        path: "/userApi/v1/roles"
        roles:
          - "T1UAR_M"
      - method: "POST"
        path: "/userApi/v1/roles"
        roles:
          - "T1UAR_M"
      - method: "DELETE"
        path: "/userApi/v1/roles/{roleId}"
        roles:
          - "T1UAR_M"
      - method: "GET"
        path: "/userApi/v1/roles/{roleId}"
        roles:
          - "T1UAR_M"
      - method: "PUT"
        path: "/userApi/v1/roles/{roleId}"
        roles:
          - "T1UAR_M"
      - method: "DELETE"
        path: "/userApi/v1/roles/{roleId}/identityAttributes"
        roles:
          - "T1UAR_M"
      - method: "PUT"
        path: "/userApi/v1/roles/{roleId}/identityAttributes"
        roles:
          - "T1UAR_M"
      - method: "POST"
        path: "/userApi/v1/roles/{roleId}/identityAttributes/duplicate"
        roles:
          - "T1UAR_M"
      - method: "GET"
        path: "/userApi/v1/users"
        roles:
          - "T1UAR_M"
      - method: "POST"
        path: "/userApi/v1/users/import"
        roles:
          - "T1UAR_M"
      - method: "DELETE"
        path: "/userApi/v1/users/{userId}"
        roles:
          - "T1UAR_M"
      - method: "GET"
        path: "/userApi/v1/users/{userId}"
        roles:
          - "T1UAR_M"
      - method: "PUT"
        path: "/userApi/v1/users/{userId}"
        roles:
          - "T1UAR_M"
      - method: "GET"
        path: "/userApi/v1/users/{userId}/roles"
        roles:
          - "T1UAR_M"
      - method: "PUT"
        path: "/userApi/v1/users/{userId}/roles"
        roles:
          - "T1UAR_M"  

    logging:
      business:
        - method: POST
          path: "/onboardingApi/v1/onboardingRequests"
          config:
            operations:
              - ONBOARDING_REQUEST
        - method: POST
          path: "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/approve"
          config:
            operations:
              - APPROVE_ONBOARDING_REQUEST
        - method: POST
          path:  "/onboardingApi/v1/onboardingRequests/{onboardingRequestId}/reject"
          config:
            operations:
              - REJECT_ONBOARDING_REQUEST
