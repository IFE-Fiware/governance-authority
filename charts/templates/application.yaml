apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.appname }}
  namespace: {{ .Values.argocd.namespace }}
spec:
  project: {{ .Values.project }}
  destination:
    server: {{ .Values.cluster.address }}
    namespace: {{ .Values.cluster.namespace }}
  sources:
  - repoURL: {{ .Values.values.repo_URL }}
    targetRevision: {{ .Values.values.branch }}
    ref: values
  - repoURL: {{ .Values.postgresql.repo_URL }}
    targetRevision: {{ .Values.postgresql.targetRevision }}
    chart: {{ .Values.postgresql.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.postgresql.valueFiles }}
        - $values/app-values/Postgresql/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.postgresql.fullnameOverride }}
        {{- if .Values.postgresql.primary }}
        primary: {{- toYaml .Values.postgresql.primary | nindent 10 }}
        {{- end }}
  - repoURL: {{ .Values.keycloak.repo_URL }}
    targetRevision: {{ .Values.keycloak.targetRevision }}
    chart: {{ .Values.keycloak.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.keycloak.valueFiles }}
        - $values/app-values/Keycloak/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.keycloak.fullnameOverride }}
        apiUrl: "https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        externalDatabase:
          host: "postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local"
        extraEnvVars:
        - name: KC_HOSTNAME_ADMIN
          value: "https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: KC_HOSTNAME
          value: "https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: USERS_ROLES_BASE_URL
          value: "http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080"
        - name: KEYCLOAK_BASE_URL
          value: "https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: REALM
          value: "authority"
        - name: KEYCLOAK_EXTRA_ARGS
          value: --import-realm
        {{- if .Values.keycloak.resourcesPreset }}
        resourcesPreset: {{ .Values.keycloak.resourcesPreset }}
        {{- end }}
        {{- if .Values.keycloak.resources }}
        resources: {{- toYaml .Values.keycloak.resources | nindent 10 }}
        {{- end }}
  - repoURL: {{ .Values.ejbca.repo_URL }}
    targetRevision: {{ .Values.ejbca.targetRevision }}
    chart: {{ .Values.ejbca.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.ejbca.valueFiles }}
        - $values/app-values/ejbca/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.ejbca.fullnameOverride }}
        hostname: &hostname ejbca-community-helm.{{ .Values.cluster.namespace }}.svc.cluster.local
        ejbca:
          env:
            HTTPSERVER_HOSTNAME: *hostname
            DATABASE_JDBC_URL: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/ejbca"
          initContainers:
          - name: ejbca-init
            image: code.europa.eu:4567/simpl/simpl-open/development/iaa/ejbca-preconfig:1.0.0
            imagePullPolicy: IfNotPresent
            securityContext: {}
            env:
              - name: HTTPSERVER_HOSTNAME
                value: *hostname
              - name: MANAGEMENT_END_ENTITY_USERNAME
                value: SuperAdmin
              - name: MANAGEMENT_END_ENTITY_PASSWORD
                value: {{ .Values.ejbcakeys.keystore.password }}
              - name: DATABASE_JDBC_URL
                value: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/ejbca"
              - name: DATABASE_USER
                value: ejbca
              - name: DATABASE_PASSWORD
                value: ejbca2123
              - name: T1_GATEWAY
                value: authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
              - name: NAMESPACE
                value: {{ .Values.cluster.namespace }}
            command:
            - "./entrypoint.sh" 
        nginx:
          host: *hostname
        {{- if .Values.ejbca.resources }}
        resources: {{- toYaml .Values.ejbca.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.simpl_cloud_gateway.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.simpl_cloud_gateway.targetRevision }}
    chart: {{ .Values.simpl_cloud_gateway.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.simpl_cloud_gateway.valueFiles }}
        - $values/app-values/Simpl-Cloud-Gateway/{{ . }}
        {{- end }}
      values: |
        global:
          cors:
            allowOrigin: https://authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000
          hostBe: authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          hostTls: tls.authority.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          ingress:
            issuer: {{ .Values.cluster.issuer }}
        usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        securityAttributesProviderUrl: http://security-attributes-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        keycloakUrl: http://keycloak.{{ .Values.cluster.namespace }}.svc.cluster.local
        onboardingUrl: http://onboarding.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        ejbcaUrl: http://ejbca-community-helm.{{ .Values.cluster.namespace }}.svc.cluster.local:30080
        identityProviderUrl: http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        authenticationProviderUrl: http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        {{- if .Values.simpl_cloud_gateway.resources }}
        resources: {{- toYaml .Values.simpl_cloud_gateway.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.simpl_fe.projectID }}/packages/helm/stable"
    path: "''"
    targetRevision: {{ .Values.simpl_fe.targetRevision }}
    chart: {{ .Values.simpl_fe.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.simpl_fe.valueFiles }}
        - $values/app-values/Simpl-fe/{{ . }}
        {{- end }}
      values: |
        ingress:
          issuer: {{ .Values.cluster.issuer }}
        hostFe: authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        cors:
          allowOrigin: https://authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:4203,http://localhost:3000
        env:
        - name: API_URL
          value: "https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        - name: KEYCLOAK_URL
          value: "https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: KEYCLOAK_REALM
          value: "authority"
        - name: KEYCLOAK_CLIENT_ID
          value: "frontend-cli"
        {{- if .Values.simpl_fe.resources }}
        resources: {{- toYaml .Values.simpl_fe.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.sap.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.sap.targetRevision }}
    chart: {{ .Values.sap.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.sap.valueFiles }}
        - $values/app-values/SAP/{{ . }}
        {{- end }}
      values: |
        db:
          url: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/securityattributesprovider"
        microservices:
          identityProviderUrl: http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          onboardingUrl: http://onboarding.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        {{- if .Values.sap.resources }}
        resources: {{- toYaml .Values.sap.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.users_roles.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.users_roles.targetRevision }}
    chart: {{ .Values.users_roles.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.users_roles.valueFiles }}
        - $values/app-values/Users-Roles/{{ . }}
        {{- end }}
      values: |
        global:
          hostBe: authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          hostTls: tls.authority.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          cors:
            allowOrigin: https://authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000
          ingress:
            issuer: {{ .Values.cluster.issuer }}
        db:
          url: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/usersroles"
        microservices:
          authenticationProviderUrl: http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        kafkaConfig:
          spring:
            kafka:
              bootstrap-servers: kafka.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:9092
              consumer:
                group-id: iaa.{{ .Release.Namespace }}.users-roles
          simpl:
            kafka:
              topic:
                prefix: iaa.{{ .Release.Namespace }}.
              inbox:
                topic:
                  pattern: iaa\.{{ .Release.Namespace }}\..*
        {{- if .Values.users_roles.resources }}
        resources: {{- toYaml .Values.users_roles.resources | nindent 10 }}
        {{- end }}
  - repoURL: {{ .Values.redis.repo_URL }}
    targetRevision: {{ .Values.redis.targetRevision }}
    chart: {{ .Values.redis.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.redis.valueFiles }}
        - $values/app-values/Redis/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.redis.fullnameOverride }}
        {{- if .Values.redis.master }}
        master: {{- toYaml .Values.redis.master | nindent 10 }}
        {{- end }}
  {{- if .Values.xsfc_catalogue.enabled }}      
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.xsfc_catalogue.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.xsfc_catalogue.targetRevision }}
    chart: {{ .Values.xsfc_catalogue.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.xsfc_catalogue.valueFiles }}
        - $values/app-values/xsfc-catalogue/{{ . }}
        {{- end }}
      values: |
        global:
          ingress:
            issuer: {{ .Values.cluster.issuer }}
        ingress:
          hosts:
            - host: xsfc-server-service.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - secretName: xsfc-server-tls
              hosts:
                - xsfc-server-service.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          annotations: 
            cert-manager.io/cluster-issuer: {{ .Values.cluster.issuer }}
        hashicorp:
          service: {{ .Values.hashicorp.service }}
          role: {{ .Values.hashicorp.role }}
          secretEngine: {{ .Values.hashicorp.secretEngine }}
        neo4j:
          {{- if .Values.xsfc_catalogue.resources }}
          resources: {{- toYaml .Values.xsfc_catalogue.resources | nindent 10 }}
          {{- end }}
    {{- end }}      
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.onboarding.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.onboarding.targetRevision }}
    chart: {{ .Values.onboarding.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.onboarding.valueFiles }}
        - $values/app-values/onboarding/{{ . }}
        {{- end }}
      values: |
        db:
          url: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/onboarding"
        microservices:
          identityProviderUrl: http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        {{- if .Values.onboarding.resources }}
        resources: {{- toYaml .Values.onboarding.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.tls_gateway.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.tls_gateway.targetRevision }}
    chart: {{ .Values.tls_gateway.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.tls_gateway.valueFiles }}
        - $values/app-values/tls-gateway/{{ . }}
        {{- end }}
      values: |
        global:  
          cors:
            allowOrigin: https://authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000
        microservices:
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          keycloakUrl: http://keycloak.{{ .Values.cluster.namespace }}.svc.cluster.local
          securityAttributesProviderUrl: http://security-attributes-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          identityProviderUrl: http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          authenticationProviderUrl: http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        redis:
          host: "redis-master.{{ .Values.cluster.namespace }}.svc.cluster.local"
        hostT2: tls.authority.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        {{- if .Values.tls_gateway.resources }}
        resources: {{- toYaml .Values.tls_gateway.resources | nindent 10 }}
        {{- end }}
        appConfig:
          spring:
            cloud:
              gateway:
                routes:
                  - id: sap
                    uri: ${sap.url}
                    predicates:
                      - Path=/sap-api/mtls/**
                    filters:
                      - StripPrefix=1
                  - id: identity-provider
                    uri: ${identity-provider.url}
                    predicates:
                      - Path=/identity-api/mtls/**
                    filters:
                      - StripPrefix=1
                  - id: users-roles
                    uri: ${users-roles.url}
                    predicates:
                      - Path=/user-api/mtls/**
                    filters:
                      - StripPrefix=1
                  - id: fc-service
                    uri: "http://xsfc-service.{{ .Values.cluster.namespace }}.svc.cluster.local:8081"
                    predicates:
                      - Path=/fc/**
                    filters:
                      - StripPrefix=1
                  - id: adapter-service
                    uri: "http://adapter-service.{{ .Values.cluster.namespace }}.svc.cluster.local:8084"
                    predicates:
                      - Path=/adapter/**
                    filters:
                      - StripPrefix=1
  {{- if .Values.adapter.enabled }}                    
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.adapter.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.adapter.targetRevision }}
    chart: {{ .Values.adapter.chart_name }}
    helm:
      releaseName: {{ .Values.adapter.fullnameOverride }}
      valueFiles:
        {{- range .Values.adapter.valueFiles }}
        - $values/app-values/adapter/{{ . }}
        {{- end }}
      values: |
        ingress:
          host: adapter.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        hashicorp:
          service: {{ .Values.hashicorp.service }}
          role: {{ .Values.hashicorp.role }}
          secretEngine: {{ .Values.hashicorp.secretEngine }}
  {{- end }}        
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.identity_provider.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.identity_provider.targetRevision }}
    chart: {{ .Values.identity_provider.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.identity_provider.valueFiles }}
        - $values/app-values/identity-provider/{{ . }}
        {{- end }}
      values: |
        hostT2: tls.authority.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        db:
          url: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/identityprovider"
        redis:
          host: "redis-master.{{ .Values.cluster.namespace }}.svc.cluster.local"
        global:
          hostBe: authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          hostFe: authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          authorityUrl: https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          cors:
            allowOrigin: https://authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000
        microservices:
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          securityAttributesProviderUrl: http://security-attributes-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          onboardingUrl: http://onboarding.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          authenticationProviderUrl: http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        ejbca:
          enrollConfig:
            url: "https://ejbca-community-helm.{{ .Values.cluster.namespace }}.svc.cluster.local:30443"
          keystore:
            password: {{ .Values.ejbcakeys.keystore.password }}
        {{- if .Values.identity_provider.resources }}
        resources: {{- toYaml .Values.identity_provider.resources | nindent 10 }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.auth_provider.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.auth_provider.targetRevision }}
    chart: {{ .Values.auth_provider.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.auth_provider.valueFiles }}
        - $values/app-values/auth-provider/{{ . }}
        {{- end }}
      values: |
        urlAuthorityT2: "tls.authority.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        db:
          url: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/authenticationprovider"
        microservices:
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          identityProviderUrl: http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        simpl:
          certificate:
            san: "tls.authority.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        redis:
          host: "redis-master.{{ .Values.cluster.namespace }}.svc.cluster.local" 
        kafka:
          bootstrap-servers: kafka.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:9092   
        kafkaConfig:
          spring:
            kafka:
              bootstrap-servers: kafka.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:9092
              producer:
                properties:
                  security.protocol: SASL_PLAINTEXT
                  sasl.mechanism: PLAIN
                  sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_USER:iaa}" password="${KAFKA_PASSWORD:eezooS4Aideth1teaDeey3ohghohwohk}";
              admin:
                auto-create: true
          simpl:
            kafka:
              topic:
                prefix: iaa.{{ .Release.Namespace }}.   
        {{- if .Values.auth_provider.resources }}
        resources: {{- toYaml .Values.auth_provider.resources | nindent 10 }}
        {{- end }}
  {{- if .Values.monitoring.enabled }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.monitoring.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.monitoring.targetRevision }}
    chart: {{ .Values.monitoring.chart_name }}
    helm:
      releaseName: {{ .Values.monitoring.fullnameOverride }}
      valueFiles:
        {{- range .Values.monitoring.valueFiles }}
        - $values/app-values/monitoring/{{ . }}
        {{- end }}
      values: |
        clusterIssuer: {{ .Values.cluster.issuer }}
        domainSuffix: {{ .Values.domainSuffix }}
        namespaceTag: {{ .Values.namespaceTag }}
        mainNamespace: {{ .Values.cluster.commonToolsNamespace }}
        heartbeat:
          services:
            heartbeat.monitors:
            - type: tcp
              name: Elasticsearch Service
              id: elasticsearch:9200
              schedule: '@every 5s'
              hosts: ["elastic-elasticsearch-es-http.{{ .Values.cluster.namespace }}.svc:9200"]
            - type: tcp
              name: Kibana GUI
              id: kibana:443
              schedule: '@every 5s'
              hosts: ["kibana.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}:443"]
            - type: icmp
              id: kibana/icmp
              name: Kibana ICMP
              hosts: ["elastic-kibana-kb-http.{{ .Values.cluster.namespace }}.svc"]
              schedule: '*/5 * * * * * *'
  {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.simpl_cli.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.simpl_cli.targetRevision }}
    chart: {{ .Values.simpl_cli.chart_name }}
    helm:
      releaseName: {{ .Values.simpl_cli.fullnameOverride }}
      valueFiles:
        {{- range .Values.simpl_cli.valueFiles }}
        - $values/app-values/simpl-cli/{{ . }}
        {{- end }}
      values: |
        initAuthority:
          hostT1: authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          csr:
            cn: tls.authority.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
            o: {{ .Values.namespaceTag }}
            ou: {{ .Values.namespaceTag }}
          ejbca:
            internalHost: ejbca-community-helm.{{ .Release.Namespace }}.svc.cluster.local
          keycloak:
            internalHost: "keycloak.{{ .Release.Namespace }}.svc.cluster.local"
            url: "https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
          microservices:
            usersRolesUrl: https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/cli/userApi/v1/
            securityAttributesProviderUrl: https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/cli/sapApi/v1/
            identityProviderUrl: https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/cli/identityApi/v1/
            authenticationProviderUrl: https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/cli/authApi/v1/