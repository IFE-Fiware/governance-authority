apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.appname }}
  namespace: {{ .Values.argocd.namespace }}
spec:
  project: {{ .Values.project }}
  destination:
    server: {{ .Values.cluster.address }}
    namespace: {{ .Values.cluster.namespace }}
  sources:
  - repoURL: {{ .Values.values.repo_URL }}
    targetRevision: {{ .Values.values.branch }}
    ref: values
  - repoURL: {{ .Values.redis.repo_URL }}
    targetRevision: {{ .Values.redis.targetRevision }}
    chart: {{ .Values.redis.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.redis.valueFiles }}
        - $values/app-values/Redis/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.redis.nameOverride }}
        auth:
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-redis#redis
        master:
          podAnnotations:
            vault.security.banzaicloud.io/vault-addr: "https://vault.{{ .Values.namespaceTag.common }}.{{ .Values.domainSuffix }}"
            vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
          {{- if .Values.redis.resourcesPreset }}
          resourcesPreset: {{ .Values.redis.resourcesPreset }}
          {{- end }}
          {{- if eq .Values.resourcePreset "low" }}
          resources:
            requests:
              cpu: "0"
              memory: "0"
          {{- else }}
            {{- if .Values.redis.resources }}
          resources: {{- toYaml .Values.redis.resources | nindent 10 }}
            {{- end }}
          {{- end }}
  {{- if .Values.redis_commander.enabled }}
  - repoURL: {{ .Values.redis_commander.repo_URL }}
    targetRevision: {{ .Values.redis_commander.targetRevision }}
    path: {{.Values.redis_commander.path}}
    chart: {{ .Values.redis_commander.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.redis_commander.valueFiles }}
        - $values/app-values/Redis_commander/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.redis_commander.nameOverride }}
        ingress:
          hosts:
          - host: redis-commander.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
            paths:
              - "/"
          tls:
          - secretName: redis-commander-tls
            hosts:
              - redis-commander.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
          annotations:
            cert-manager.io/cluster-issuer: {{ .Values.cluster.issuer }}
        {{- if eq .Values.resourcePreset "low" }}
        resources:
          requests:
            cpu: "0"
            memory: "0"
        {{- else }}
          {{- if .Values.redis_commander.resources }}
        resources: {{- toYaml .Values.redis_commander.resources | nindent 10 }}
          {{- end }}
        {{- end }}
  {{- end }}
  - repoURL: {{ .Values.keycloak.repo_URL }}
    targetRevision: {{ .Values.keycloak.targetRevision }}
    chart: {{ .Values.keycloak.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.keycloak.valueFiles }}
        - $values/app-values/Keycloak/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.keycloak.nameOverride }}
        apiUrl: "https://participant.be.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}"
        podAnnotations:
          vault.security.banzaicloud.io/vault-addr: "https://vault.{{ .Values.namespaceTag.common }}.{{ .Values.domainSuffix }}"
          vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
        auth:
          adminPassword: "vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-keycloak#admin"
        externalDatabase:
          host: "pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local"
          database: {{ .Values.namespaceTag.authority }}_keycloak
          user: {{ .Values.namespaceTag.authority }}_keycloak
          password: "vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-postgres-passwords#{{ .Values.cluster.namespace }}-keycloak"
        extraEnvVars:
        - name: KC_HOSTNAME_ADMIN
          value: "https://authority.be.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}/auth"
        - name: KC_HOSTNAME
          value: "https://authority.be.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}/auth"
        - name: USERS_ROLES_BASE_URL
          value: "http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080"
        - name: KEYCLOAK_BASE_URL
          value: "https://authority.be.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}/auth"
        - name: AUTHENTICATION_PROVIDER_BASE_URL
          value: "http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080" 
        - name: REALM
          value: "authority"
        - name: KEYCLOAK_EXTRA_ARGS
          value: --import-realm
        initContainers:
        - name: import-realm
          image: nginx:latest 
          command: ["/bin/sh", "-c"]
          env:
            - name: REDIRECT_URIS
              value: |-
                [ "https://authority.fe.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}/*" ]
            - name: REALM_NAME
              value: realm
            - name: URL
              value: https://code.europa.eu/simpl/simpl-open/development/iaa/charts/-/raw/develop/samples/keycloak-realms/2.0.0/authority-realm-export.json?ref_type=heads
          args:
            - |
              curl ${URL} | envsubst '$REDIRECT_URIS' > /config/${REALM_NAME}.json;   
          volumeMounts:
            - name: realm-volume
              mountPath: /config 
        - name: init-spi
          image: curlimages/curl
          command: ["/bin/sh", "-c"]
          env:
            - name: ARTIFACT
              value: keycloak-authenticator
            - name: URL
              value: https://code.europa.eu/api/v4/projects/915/packages/maven/com/aruba/simpl/keycloak-authenticator/2.0.0/keycloak-authenticator-2.0.0.jar
          args:
            - |
              curl -o /custom-spi/${ARTIFACT}.jar ${URL};
          volumeMounts:
          - name: spi-volume
            mountPath: /custom-spi        
        {{- if .Values.keycloak.resourcesPreset }}
        resourcesPreset: {{ .Values.keycloak.resourcesPreset }}
        {{- end }}
        {{- if eq .Values.resourcePreset "low" }}
        resources:
          requests:
            cpu: "0"
            memory: "0"
        {{- else }}
          {{- if .Values.keycloak.resources }}
        resources: {{- toYaml .Values.keycloak.resources | nindent 10 }}
          {{- end }}
        {{- end }}
  - repoURL: {{ .Values.ejbca.repo_URL }}
    targetRevision: {{ .Values.ejbca.targetRevision }}
    chart: {{ .Values.ejbca.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.ejbca.valueFiles }}
        - $values/app-values/ejbca/{{ . }}
        {{- end }}
      values: |
        podAnnotations:
          vault.security.banzaicloud.io/vault-addr: "https://vault.{{ .Values.namespaceTag.common }}.{{ .Values.domainSuffix }}"
          vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
        fullnameOverride: {{ .Values.ejbca.fullnameOverride }}
        hostname: &hostname ejbca-community-helm.{{ .Values.cluster.namespace }}.svc.cluster.local
        ejbca:
          env:
            HTTPSERVER_HOSTNAME: *hostname
            DATABASE_JDBC_URL: "jdbc:postgresql://pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:5432/{{ .Values.cluster.namespace }}_ejbca"
            DATABASE_USER: {{ .Values.cluster.namespace }}_ejbca
            DATABASE_PASSWORD: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-postgres-passwords#{{ .Values.cluster.namespace }}-ejbca
          initContainers:
          - name: ejbca-init
            image: code.europa.eu:4567/simpl/simpl-open/development/iaa/ejbca-preconfig:1.0.0
            imagePullPolicy: IfNotPresent
            securityContext: {}
            env:
              - name: HTTPSERVER_HOSTNAME
                value: *hostname
              - name: MANAGEMENT_END_ENTITY_USERNAME
                value: SuperAdmin
              - name: MANAGEMENT_END_ENTITY_PASSWORD
                value: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-ejbca#keystorepass
              - name: DATABASE_JDBC_URL
                value: "jdbc:postgresql://pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:5432/{{ .Values.cluster.namespace }}_ejbca"
              - name: DATABASE_USER
                value: {{ .Values.cluster.namespace }}_ejbca
              - name: DATABASE_PASSWORD
                value: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-postgres-passwords#{{ .Values.cluster.namespace }}-ejbca
              - name: T1_GATEWAY
                value: authority.be.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
              - name: NAMESPACE
                value: {{ .Values.cluster.namespace }}
            command:
            - "./entrypoint.sh" 
        nginx:
          host: *hostname
        {{- if eq .Values.resourcePreset "low" }}
        resources:
          requests:
            cpu: "0"
            memory: "0"
        {{- else }}
          {{- if .Values.ejbca.resources }}
        resources: {{- toYaml .Values.ejbca.resources | nindent 10 }}
          {{- end }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.tier1_gateway.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.tier1_gateway.targetRevision }}
    chart: {{ .Values.tier1_gateway.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.tier1_gateway.valueFiles }}
        - $values/app-values/tier1-gateway/{{ . }}
        {{- end }}
      values: |
        hostT1: authority.be.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
        cors:
          allowOrigin: https://authority.fe.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }},https://authority.be.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000
        ingress:
          issuer: {{ .Values.cluster.issuer }}
        usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        securityAttributesProviderUrl: http://security-attributes-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        keycloakUrl: http://keycloak.{{ .Values.cluster.namespace }}.svc.cluster.local
        onboardingUrl: http://onboarding.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        ejbcaUrl: http://ejbca-community-helm.{{ .Values.cluster.namespace }}.svc.cluster.local:30080
        identityProviderUrl: http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        authenticationProviderUrl: http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        microservices-info:
          microservices:
          - name: users-roles
            internalUrl: "http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080/v1"
            detailUrl: "https://authority.be.{{ .Values.cluster.namespace }}.{{ .Values.domainSuffix }}/userApi/v1/"
          - name: sap
            internalUrl: "http://security-attributes-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080/v1"
            detailUrl: "https://authority.be.{{ .Values.cluster.namespace }}.{{ .Values.domainSuffix }}/sapApi/v1/"
          - name: identity-provider
            internalUrl: "http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080/v1"
            detailUrl: "https://authority.be.{{ .Values.cluster.namespace }}.{{ .Values.domainSuffix }}/identityApi/v1/"
          - name: onboarding
            internalUrl: "http://onboarding.{{ .Values.cluster.namespace }}.svc.cluster.local:8080/v1"
            detailUrl: "https://authority.be.{{ .Values.cluster.namespace }}.{{ .Values.domainSuffix }}/onboardingApi/v1/"
          - name: authentication-provider
            internalUrl: "http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080/v1"
            detailUrl: "https://authority.be.{{ .Values.cluster.namespace}}.{{ .Values.domainSuffix }}/authApi/v1/"
        {{- if eq .Values.resourcePreset "low" }}
        resources:
          requests:
            cpu: "0"
            memory: "0"
        {{- else }}
          {{- if .Values.tier1_gateway.resources }}
        resources: {{- toYaml .Values.tier1_gateway.resources | nindent 10 }}
          {{- end }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.simpl_fe.projectID }}/packages/helm/stable"
    path: "''"
    targetRevision: {{ .Values.simpl_fe.targetRevision }}
    chart: {{ .Values.simpl_fe.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.simpl_fe.valueFiles }}
        - $values/app-values/Simpl-fe/{{ . }}
        {{- end }}
      values: |
        ingress:
          issuer: {{ .Values.cluster.issuer }}
        hostFe: authority.fe.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
        cors:
          allowOrigin: https://authority.fe.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }},https://authority.be.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:4203,http://localhost:3000
        env:
        - name: API_URL
          value: "https://authority.be.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}"
        - name: KEYCLOAK_URL
          value: "https://authority.be.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}/auth"
        - name: KEYCLOAK_REALM
          value: "authority"
        - name: KEYCLOAK_CLIENT_ID
          value: "frontend-cli"
        {{- if eq .Values.resourcePreset "low" }}
        resources:
          requests:
            cpu: "0"
            memory: "0"
        {{- else }}
          {{- if .Values.simpl_fe.resources }}
        resources: {{- toYaml .Values.simpl_fe.resources | nindent 10 }}
          {{- end }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.sap.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.sap.targetRevision }}
    chart: {{ .Values.sap.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.sap.valueFiles }}
        - $values/app-values/SAP/{{ . }}
        {{- end }}
      values: |
        podAnnotations:
          vault.security.banzaicloud.io/vault-addr: "https://vault.{{ .Values.namespaceTag.common }}.{{ .Values.domainSuffix }}"
          vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
        microservices:
          identityProviderUrl: http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          onboardingUrl: http://onboarding.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        appConfig:
          spring:
            datasource:
              url: "jdbc:postgresql://pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:5432/{{ .Values.cluster.namespace }}_securityattributesprovider"
              username: {{ .Values.namespaceTag.authority }}_securityattributesprovider
              password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-postgres-passwords#{{ .Values.cluster.namespace }}-securityattributesprovider  
        simpl:
          ephemeral-proof:
            issuer-url: tls.authority.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
            expire-after: 3m
            proof-of-possession:
              signature-algorithm: ECDSA
              expiration-window:
                amount: 1
                chrono-unit: minutes
        management:
          tracing:
            sampling:
              probability: 1.0
          otlp:
            tracing:
              endpoint: http://collector.{{ .Values.namespaceTag.common }}.{{ .Values.domainSuffix }}
        {{- if eq .Values.resourcePreset "low" }}
        resources:
          requests:
            cpu: "0"
            memory: "0"
        {{- else }}
          {{- if .Values.sap.resources }}
        resources: {{- toYaml .Values.sap.resources | nindent 10 }}
          {{- end }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.users_roles.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.users_roles.targetRevision }}
    chart: {{ .Values.users_roles.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.users_roles.valueFiles }}
        - $values/app-values/Users-Roles/{{ . }}
        {{- end }}
      values: |
        podAnnotations:
          vault.security.banzaicloud.io/vault-addr: "https://vault.{{ .Values.namespaceTag.common }}.{{ .Values.domainSuffix }}"
          vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
        hostT1: authority.be.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
        authorityHostT2: tls.authority.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
        global:
          ingress:
            issuer: {{ .Values.cluster.issuer }}
        keycloak:
          master:
            password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-keycloak#admin
        db:
          url: "jdbc:postgresql://pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:5432/{{ .Values.cluster.namespace }}_usersroles"
          username: {{ .Values.namespaceTag.authority }}_usersroles
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-postgres-passwords#{{ .Values.cluster.namespace }}-usersroles
        env:
        - name: KAFKA_USERSROLES
          value: "vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-kafka-credentials#{{ .Values.cluster.namespace }}_usersroles"
        redis:
          host: "redis-master.{{ .Values.cluster.namespace }}.svc.cluster.local"
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-redis#redis
        microservices:
          authenticationProviderUrl: http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        kafkaConfig:
          spring:
            kafka:
              bootstrap-servers: kafka.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:9092
              consumer:
                group-id: users-roles
                properties:
                  security.protocol: SASL_PLAINTEXT
                  sasl.mechanism: PLAIN
                  sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="{{ .Values.cluster.namespace }}_usersroles" password="${KAFKA_USERSROLES}";
              admin:
                auto-create: true
          simpl:
            kafka:
              topic:
                prefix: iaa.{{ .Values.cluster.namespace }}.
              inbox:
                topic:
                  pattern: iaa\.{{ .Values.cluster.namespace }}\..*
        {{- if eq .Values.resourcePreset "low" }}
        resources:
          requests:
            cpu: "0"
            memory: "0"
        {{- else }}
          {{- if .Values.users_roles.resources }}
        resources: {{- toYaml .Values.users_roles.resources | nindent 10 }}
          {{- end }}
        {{- end }}
  {{- if .Values.xsfc_catalogue.enabled }}      
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.xsfc_catalogue.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.xsfc_catalogue.targetRevision }}
    chart: {{ .Values.xsfc_catalogue.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.xsfc_catalogue.valueFiles }}
        - $values/app-values/xsfc-catalogue/{{ . }}
        {{- end }}
      values: |
        global:
          ingress:
            issuer: {{ .Values.cluster.issuer }}
        ingress:
          hosts:
            - host: xsfc-server-service.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - secretName: xsfc-server-tls
              hosts:
                - xsfc-server-service.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
          annotations: 
            cert-manager.io/cluster-issuer: {{ .Values.cluster.issuer }}
        hashicorp:
          service: "https://vault.{{ .Values.namespaceTag.common }}.{{ .Values.domainSuffix }}"
          role: {{ .Values.hashicorp.role }}
          secretEngine: {{ .Values.hashicorp.secretEngine }}
        secretConfigPath: "{{ .Values.hashicorp.secretEngine }}/{{ .Values.cluster.namespace }}-xsfc-service"  
        {{- if eq .Values.resourcePreset "low" }}
        resources:
          requests:
            cpu: "0"
            memory: "0"
        {{- else }}
          {{- if .Values.xsfc_catalogue.resources }}
        resources: {{- toYaml .Values.xsfc_catalogue.resources | nindent 10 }}
          {{- end }}
        {{- end }}
  {{- end }}      
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.onboarding.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.onboarding.targetRevision }}
    chart: {{ .Values.onboarding.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.onboarding.valueFiles }}
        - $values/app-values/onboarding/{{ . }}
        {{- end }}
      values: |
        podAnnotations:
          vault.security.banzaicloud.io/vault-addr: "https://vault.{{ .Values.namespaceTag.common }}.{{ .Values.domainSuffix }}"
          vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
        db:
          url: "jdbc:postgresql://pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:5432/{{ .Values.cluster.namespace }}_onboarding"
          username: {{ .Values.namespaceTag.authority }}_onboarding
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-postgres-passwords#{{ .Values.cluster.namespace }}-onboarding
        env:
        - name: KAFKA_ONBOARDING
          value: "vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-kafka-credentials#{{ .Values.cluster.namespace }}_onboarding"
        microservices:
          identityProviderUrl: http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        kafkaConfig:
        spring:
          kafka:
            bootstrap-servers: kafka.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:9092
            producer:
              properties:
                security.protocol: SASL_PLAINTEXT
                sasl.mechanism: PLAIN
                sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="{{ .Values.cluster.namespace }}_onboarding" password="${KAFKA_ONBOARDING}";
            admin:
              auto-create: true
        simpl:
          kafka:
            topic:
              prefix: iaa.{{ .Values.cluster.namespace }}.
        {{- if eq .Values.resourcePreset "low" }}
        resources:
          requests:
            cpu: "0"
            memory: "0"
        {{- else }}
          {{- if .Values.onboarding.resources }}
        resources: {{- toYaml .Values.onboarding.resources | nindent 10 }}
          {{- end }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.tier2_gateway.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.tier2_gateway.targetRevision }}
    chart: {{ .Values.tier2_gateway.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.tier2_gateway.valueFiles }}
        - $values/app-values/tier2-gateway/{{ . }}
        {{- end }}
      values: |
        podAnnotations:
          vault.security.banzaicloud.io/vault-addr: "https://vault.{{ .Values.namespaceTag.common }}.{{ .Values.domainSuffix }}"
          vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
        env:
        - name: KAFKA_TIER2GW
          value: "vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-kafka-credentials#{{ .Values.cluster.namespace }}_tier2gw"
        global:
          cors:
            allowOrigin: https://authority.fe.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }},https://authority.be.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000
        microservices:
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          keycloakUrl: http://keycloak.{{ .Values.cluster.namespace }}.svc.cluster.local
          securityAttributesProviderUrl: http://security-attributes-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          identityProviderUrl: http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          authenticationProviderUrl: http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        redis:
          host: "redis-master.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local"
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-redis#redis
        hostT2: tls.authority.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
        kafkaConfig:
          spring:
            kafka:
              bootstrap-servers: kafka.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:9092
              consumer:
                properties:
                  security.protocol: SASL_PLAINTEXT
                  sasl.mechanism: PLAIN
                  sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="{{ .Values.cluster.namespace }}_tier2gw" password="${KAFKA_TIER2GW}";
              admin:
                auto-create: true
          simpl:
            kafka:
              topic:
                prefix: iaa.{{ .Values.cluster.namespace }}.
        {{- if eq .Values.resourcePreset "low" }}
        resources:
          requests:
            cpu: "0"
            memory: "0"
        {{- else }}
          {{- if .Values.tier2_gateway.resources }}
        resources: {{- toYaml .Values.tier2_gateway.resources | nindent 10 }}
          {{- end }}
        {{- end }}
  {{- if .Values.adapter.enabled }}                    
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.adapter.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.adapter.targetRevision }}
    chart: {{ .Values.adapter.chart_name }}
    helm:
      releaseName: {{ .Values.adapter.fullnameOverride }}
      valueFiles:
        {{- range .Values.adapter.valueFiles }}
        - $values/app-values/adapter/{{ . }}
        {{- end }}
      values: |
        ingress:
          host: adapter.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
        hashicorp:
          service: "https://vault.{{ .Values.namespaceTag.common }}.{{ .Values.domainSuffix }}"
          role: {{ .Values.hashicorp.role }}
          secretEngine: {{ .Values.hashicorp.secretEngine }}
        secretConfigPath: "{{ .Values.hashicorp.secretEngine }}/{{ .Values.cluster.namespace }}-adapter-simpl-backend"  
  {{- end }}        
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.identity_provider.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.identity_provider.targetRevision }}
    chart: {{ .Values.identity_provider.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.identity_provider.valueFiles }}
        - $values/app-values/identity-provider/{{ . }}
        {{- end }}
      values: |
        podAnnotations:
          vault.security.banzaicloud.io/vault-addr: "https://vault.{{ .Values.namespaceTag.common }}.{{ .Values.domainSuffix }}"
          vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
        hostT2: tls.authority.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
        db:
          url: "jdbc:postgresql://pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:5432/{{ .Values.cluster.namespace }}_identityprovider"
          username: {{ .Values.namespaceTag.authority }}_identityprovider
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-postgres-passwords#{{ .Values.cluster.namespace }}-identityprovider
        redis:
          host: "redis-master.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local"
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-redis#redis
        global:
          hostBe: authority.be.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
          hostFe: authority.fe.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
          authorityUrl: https://authority.be.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}
          cors:
            allowOrigin: https://authority.fe.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000
        microservices:
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          securityAttributesProviderUrl: http://security-attributes-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          onboardingUrl: http://onboarding.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          authenticationProviderUrl: http://authentication-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        ejbca:
          enrollConfig:
            url: "https://ejbca-community-helm.{{ .Values.cluster.namespace }}.svc.cluster.local:30443"
          keystore:
            password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-ejbca#keystorepass
        management:
          otlp:
            tracing:
              endpoint: http://collector.{{ .Values.namespaceTag.common }}.{{ .Values.domainSuffix }}
        {{- if eq .Values.resourcePreset "low" }}
        resources:
          requests:
            cpu: "0"
            memory: "0"
        {{- else }}
          {{- if .Values.identity_provider.resources }}
        resources: {{- toYaml .Values.identity_provider.resources | nindent 10 }}
          {{- end }}
        {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.auth_provider.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.auth_provider.targetRevision }}
    chart: {{ .Values.auth_provider.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.auth_provider.valueFiles }}
        - $values/app-values/auth-provider/{{ . }}
        {{- end }}
      values: |
        podAnnotations:
          vault.security.banzaicloud.io/vault-addr: "https://vault.{{ .Values.namespaceTag.common }}.{{ .Values.domainSuffix }}"
          vault.security.banzaicloud.io/vault-role: {{ .Values.hashicorp.role }}
        urlAuthorityT2: "tls.authority.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}"
        db:
          url: "jdbc:postgresql://pg-cluster.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:5432/{{ .Values.cluster.namespace }}_authenticationprovider"
          username: {{ .Values.namespaceTag.authority }}_authenticationprovider
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.namespace }}-postgres-passwords#{{ .Values.cluster.namespace }}-authenticationprovider
        env:
        - name: KAFKA_AUTHPROVIDER
          value: "vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-kafka-credentials#{{ .Values.cluster.namespace }}_authprovider"
        microservices:
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        simpl:
          certificate:
            san: "tls.authority.{{ .Values.namespaceTag.authority }}.{{ .Values.domainSuffix }}"
        redis:
          host: "redis-master.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local"
          password: vault:{{ .Values.hashicorp.secretEngine }}/data/{{ .Values.cluster.commonToolsNamespace }}-redis#redis
        kafkaConfig:
          spring:
            kafka:
              bootstrap-servers: kafka.{{ .Values.cluster.commonToolsNamespace }}.svc.cluster.local:9092
              producer:
                properties:
                  security.protocol: SASL_PLAINTEXT
                  sasl.mechanism: PLAIN
                  sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="{{ .Values.cluster.namespace }}_authprovider" password="${KAFKA_AUTHPROVIDER}";
              admin:
                auto-create: true
          simpl:
            kafka:
              topic:
                prefix: iaa.{{ .Values.cluster.namespace }}.
        {{- if eq .Values.resourcePreset "low" }}
        resources:
          requests:
            cpu: "0"
            memory: "0"
        {{- else }}
          {{- if .Values.auth_provider.resources }}
        resources: {{- toYaml .Values.auth_provider.resources | nindent 10 }}
          {{- end }}
        {{- end }}
  {{- if .Values.monitoring.enabled }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.monitoring.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.monitoring.targetRevision }}
    chart: {{ .Values.monitoring.chart_name }}
    helm:
      releaseName: {{ .Values.monitoring.fullnameOverride }}
      valueFiles:
        {{- range .Values.monitoring.valueFiles }}
        - $values/app-values/monitoring/{{ . }}
        {{- end }}
      values: |
        clusterIssuer: {{ .Values.cluster.issuer }}
        domainSuffix: {{ .Values.domainSuffix }}
        namespaceTag: {{ .Values.namespaceTag.authority }}
        mainNamespace: {{ .Values.cluster.commonToolsNamespace }}
        filebeat:
          {{- if eq .Values.resourcePreset "low" }}
          resources:
            requests:
              cpu: "0"
              memory: "0"
          {{- else }}
            {{- if .Values.monitoring.resources.filebeat }}
          resources: {{- toYaml .Values.monitoring.resources.filebeat | nindent 12 }}
            {{- end }}
          {{- end }}
  {{- end }}