apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.argocd.appname }}
  namespace: {{ .Values.argocd.namespace }}
spec:
  project: {{ .Values.project }}
  destination:
    server: {{ .Values.cluster.address }}
    namespace: {{ .Values.cluster.namespace }}
  sources:
  - repoURL: {{ .Values.values.repo_URL }}
    targetRevision: {{ .Values.values.branch }}
    ref: values
  - repoURL: {{ .Values.postgresql.repo_URL }}
    targetRevision: {{ .Values.postgresql.targetRevision }}
    chart: {{ .Values.postgresql.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.postgresql.valueFiles }}
        - $values/app-values/Postgresql/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.postgresql.fullnameOverride }}
  - repoURL: {{ .Values.keycloak.repo_URL }}
    targetRevision: {{ .Values.keycloak.targetRevision }}
    chart: {{ .Values.keycloak.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.keycloak.valueFiles }}
        - $values/app-values/Keycloak/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.keycloak.fullnameOverride }}
        apiUrl: "https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        externalDatabase:
          host: "postgresql.{{ .Release.Namespace }}.svc.cluster.local"
        extraEnvVars:
        - name: KC_HOSTNAME_ADMIN
          value: "https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: KC_HOSTNAME
          value: "https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: USERS_ROLES_BASE_URL
          value: "http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080"
        - name: KEYCLOAK_BASE_URL
          value: "https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: REALM
          value: "authority"
        - name: KEYCLOAK_EXTRA_ARGS
          value: --import-realm
  - repoURL: {{ .Values.ejbca.repo_URL }}
    targetRevision: {{ .Values.ejbca.targetRevision }}
    chart: {{ .Values.ejbca.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.ejbca.valueFiles }}
        - $values/app-values/ejbca/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.ejbca.fullnameOverride }}
        hostname: &hostname ejbca-community-helm.{{ .Values.cluster.namespace }}.svc.cluster.local
        ejbca:
          env:
            HTTPSERVER_HOSTNAME: *hostname
            DATABASE_JDBC_URL: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/ejbca"
        nginx:
          host: *hostname 
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.simpl_cloud_gateway.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.simpl_cloud_gateway.targetRevision }}
    chart: {{ .Values.simpl_cloud_gateway.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.simpl_cloud_gateway.valueFiles }}
        - $values/app-values/Simpl-Cloud-Gateway/{{ . }}
        {{- end }}
      values: |
        microservices:
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          securityAttributesProviderUrl: http://security-attributes-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          keycloakUrl: http://keycloak.{{ .Values.cluster.namespace }}.svc.cluster.local
          onboardingUrl: http://onboarding.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          ejbcaUrl: http://ejbca-community-helm.{{ .Values.cluster.namespace }}.svc.cluster.local:30080
          identityProviderUrl: http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        global:
          hostBe: authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          hostTls: tls.authority.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          hostFe: authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          authorityUrl: https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          keystore:
            password: "authority"
          cors:
            allowOrigin: https://authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},https://authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000     
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.simpl_fe.projectID }}/packages/helm/stable"
    path: "''"
    targetRevision: {{ .Values.simpl_fe.targetRevision }}
    chart: {{ .Values.simpl_fe.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.simpl_fe.valueFiles }}
        - $values/app-values/Simpl-fe/{{ . }}
        {{- end }}
      values: |
        hostFe: authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        cors:
          allowOrigin: https://authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:4203,http://localhost:3000
        env:
        - name: API_URL
          value: "https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
        - name: KEYCLOAK_URL
          value: "https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}/auth"
        - name: KEYCLOAK_REALM
          value: "authority"
        - name: KEYCLOAK_CLIENT_ID
          value: "frontend-cli"
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.sap.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.sap.targetRevision }}
    chart: {{ .Values.sap.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.sap.valueFiles }}
        - $values/app-values/SAP/{{ . }}
        {{- end }}
      values: |
        global:
          hostTls: tls.authority.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          keystore:
            password: "authority"
        db:
          url: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/securityattributesprovider"
        microservices:
          identityProviderUrl: http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          onboardingUrl: http://onboarding.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.users_roles.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.users_roles.targetRevision }}
    chart: {{ .Values.users_roles.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.users_roles.valueFiles }}
        - $values/app-values/Users-Roles/{{ . }}
        {{- end }}
      values: |
        global:
          hostBe: authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          hostTls: tls.authority.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          keystore:
            password: "authority"
          cors:
            allowOrigin: https://authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000
        db:
          url: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/usersroles"
        redis:
          host: "redis-master.{{ .Values.cluster.namespace }}.svc.cluster.local"
        microservices:
          identityProviderUrl: http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
  - repoURL: {{ .Values.redis.repo_URL }}
    targetRevision: {{ .Values.redis.targetRevision }}
    chart: {{ .Values.redis.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.redis.valueFiles }}
        - $values/app-values/Redis/{{ . }}
        {{- end }}
      values: |
        fullnameOverride: {{ .Values.redis.fullnameOverride }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.xsfc_data_catalogue.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.xsfc_data_catalogue.targetRevision }}
    chart: {{ .Values.xsfc_data_catalogue.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.xsfc_data_catalogue.valueFiles }}
        - $values/app-values/xsfc-data-catalogue/{{ . }}
        {{- end }}
      values: |
        podSecurityContext: 
          allowPrivilegeEscalation: false
        ingress:
          hosts:
            - host: xsfc-data-server-service.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - secretName: xsfc-data-server-tls
              hosts:
                - xsfc-data-server-service.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        hashicorp:
          service: {{ .Values.hashicorp.service }}
        secretEngine: {{ .Values.secretEngine }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.xsfc_infra_catalogue.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.xsfc_infra_catalogue.targetRevision }}
    chart: {{ .Values.xsfc_infra_catalogue.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.xsfc_infra_catalogue.valueFiles }}
        - $values/app-values/xsfc-infra-catalogue/{{ . }}
        {{- end }}
      values: |
        podSecurityContext: 
          allowPrivilegeEscalation: false
        ingress:
          hosts:
            - host: xsfc-infra-server-service.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - secretName: xsfc-infra-server-tls
              hosts:
                - xsfc-infra-server-service.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
        hashicorp:
          service: {{ .Values.hashicorp.service }}
        secretEngine: {{ .Values.secretEngine }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.onboarding.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.onboarding.targetRevision }}
    chart: {{ .Values.onboarding.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.onboarding.valueFiles }}
        - $values/app-values/onboarding/{{ . }}
        {{- end }}
      values: |
        global:
          hostTls: "https://onboarding.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}"
          keystore:
            password: "authority"
        db:
          url: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/onboarding"
        microservices:
          identityProviderUrl: http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.tls_gateway.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.tls_gateway.targetRevision }}
    chart: {{ .Values.tls_gateway.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.tls_gateway.valueFiles }}
        - $values/app-values/tls-gateway/{{ . }}
        {{- end }}
      values: |
        microservices:
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          securityAttributesProviderUrl: http://security-attributes-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          keycloakUrl: http://keycloak.{{ .Values.cluster.namespace }}.svc.cluster.local
          identityProviderUrl: http://identity-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        global:  
          cors:
            allowOrigin: https://authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.poc_gaia_edc.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.poc_gaia_edc.targetRevision }}
    chart: {{ .Values.poc_gaia_edc.chart_name }}
    helm:
      releaseName: {{ .Values.poc_gaia_edc.fullnameOverride }}
      valueFiles:
        {{- range .Values.poc_gaia_edc.valueFiles }}
        - $values/app-values/poc-gaia-edc/{{ . }}
        {{- end }}
      values: |
        podSecurityContext: 
          allowPrivilegeEscalation: false
        ingress:
          host: adapter.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          tls:
            secretName: adapter-simpl-backend-tls
        secretEngine: {{ .Values.secretEngine }}
        hashicorp:
          service: {{ .Values.hashicorp.service }}
  {{- if .Values.monitoring.enabled }}
  - repoURL: {{ .Values.monitoring.operator.repo_URL }}
    targetRevision: {{ .Values.monitoring.operator.targetRevision }}
    chart: {{ .Values.monitoring.operator.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.monitoring.operator.valueFiles }}
        - $values/app-values/monitoring-operator/{{ . }}
        {{- end }}
      values: |
        managedNamespaces: [{{ .Values.cluster.namespace }}]
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.monitoring.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.monitoring.targetRevision }}
    chart: {{ .Values.monitoring.chart_name }}
    helm:
      releaseName: {{ .Values.monitoring.fullnameOverride }}
      valueFiles:
        {{- range .Values.monitoring.valueFiles }}
        - $values/app-values/monitoring/{{ . }}
        {{- end }}
      values: |
        domainSuffix: {{ .Values.domainSuffix }}
        namespaceTag: {{ .Values.namespaceTag }}
        metricbeat:
          kubeStateHost: {{ .Values.cluster.kubeStateHost }}
        heartbeat:
          services:
            heartbeat.monitors:
            - type: tcp
              name: Elasticsearch Service
              id: elasticsearch:9200
              schedule: '@every 5s'
              hosts: ["elastic-elasticsearch-es-http.{{ .Values.cluster.namespace }}.svc:9200"]
            - type: tcp
              name: Kibana GUI
              id: kibana:443
              schedule: '@every 5s'
              hosts: ["kibana.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}:443"]
            - type: icmp
              id: kibana/icmp
              name: Kibana ICMP
              hosts: ["elastic-kibana-kb-http.{{ .Values.cluster.namespace }}.svc"]
              schedule: '*/5 * * * * * *'
  {{- end }}
  - repoURL: "https://code.europa.eu/api/v4/projects/{{ .Values.identity_provider.projectID }}/packages/helm/stable"
    path: ''
    targetRevision: {{ .Values.identity_provider.targetRevision }}
    chart: {{ .Values.identity_provider.chart_name }}
    helm:
      valueFiles:
        {{- range .Values.identity_provider.valueFiles }}
        - $values/app-values/identity-provider/{{ . }}
        {{- end }}
      values: |
        global:
          hostBe: authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          hostTls: tls.authority.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          hostFe: authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          authorityUrl: https://authority.be.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }}
          keystore:
            password: "authority"
          cors:
            allowOrigin: https://authority.fe.{{ .Values.namespaceTag }}.{{ .Values.domainSuffix }},http://localhost:4202,http://localhost:3000
        db:
          url: "jdbc:postgresql://postgresql.{{ .Values.cluster.namespace }}.svc.cluster.local:5432/identityprovider"
        redis:
          host: "redis-master.{{ .Values.cluster.namespace }}.svc.cluster.local"
        microservices:
          usersRolesUrl: http://users-roles.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          securityAttributesProviderUrl: http://security-attributes-provider.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
          onboardingUrl: http://onboarding.{{ .Values.cluster.namespace }}.svc.cluster.local:8080
        ejbca:
          enrollConfig:
            url: "https://ejbca-community-helm.{{ .Values.cluster.namespace }}.svc.cluster.local:30443"
          keystore:
            base64: {{ .Values.ejbcakeys.keystore.base64 }}
            password: {{ .Values.ejbcakeys.keystore.password }}
          truststore: 
            base64: {{ .Values.ejbcakeys.truststore.base64 }}
            password: {{ .Values.ejbcakeys.truststore.password }}