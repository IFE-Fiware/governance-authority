---
# Source: authority/templates/application.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ${ARGOCD_APPNAME}
  namespace: ${ARGOCD_NAMESPACE}
spec:
  project: ${PROJECT}
  destination:
    server: https://kubernetes.default.svc
    namespace: ${NAMESPACE}
  sources:
  - repoURL: https://code.europa.eu/simpl/simpl-open/development/agents/governance-authority.git
    targetRevision: develop
    ref: values
  - repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 15.2.5
    chart: postgresql
    helm:
      valueFiles:
        - $values/app-values/Postgresql/values.yaml
        - $values/app-values/Postgresql/values-authority.yaml
      values: |
        fullnameOverride: postgresql
        primary:
          resources:
            requests:
              cpu: "0"
              memory: "0"
          resourcesPreset: none
  - repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 22.2.5
    chart: keycloak
    helm:
      valueFiles:
        - $values/app-values/Keycloak/values.yaml
      values: |
        fullnameOverride: keycloak
        apiUrl: "https://be.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}"
        externalDatabase:
          host: "postgresql.${NAMESPACE}.svc.cluster.local"
        extraEnvVars:
        - name: KC_HOSTNAME_ADMIN
          value: "https://be.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}/auth"
        - name: KC_HOSTNAME
          value: "https://be.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}/auth"
        - name: USERS_ROLES_BASE_URL
          value: "http://users-roles.${NAMESPACE}.svc.cluster.local:8080"
        - name: KEYCLOAK_BASE_URL
          value: "https://be.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}/auth"
        - name: REALM
          value: "authority"
        - name: KEYCLOAK_EXTRA_ARGS
          value: --import-realm
        resourcesPreset: none
        resources:
          requests:
            cpu: "0"
            memory: "0"
  - repoURL: https://keyfactor.github.io/ejbca-community-helm
    targetRevision: 1.0.3
    chart: ejbca-community-helm
    helm:
      valueFiles:
        - $values/app-values/ejbca/values.yaml
      values: |
        fullnameOverride: ejbca-community-helm
        hostname: &hostname ejbca-community-helm.${NAMESPACE}.svc.cluster.local
        ejbca:
          env:
            HTTPSERVER_HOSTNAME: *hostname
            DATABASE_JDBC_URL: "jdbc:postgresql://postgresql.${NAMESPACE}.svc.cluster.local:5432/ejbca"
        nginx:
          host: *hostname
        resources:
          requests:
            cpu: "0"
            memory: "0"
  - repoURL: "https://code.europa.eu/api/v4/projects/772/packages/helm/stable"
    path: ''
    targetRevision: 0.8.0
    chart: simpl-cloud-gateway
    helm:
      valueFiles:
        - $values/app-values/Simpl-Cloud-Gateway/values.yaml
        - $values/app-values/Simpl-Cloud-Gateway/values-routes.yaml
      values: |
        global:
          cors:
            allowOrigin: https://fe.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX},https://be.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX},http://localhost:4202,http://localhost:3000
          hostBe: be.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}
          hostTls: tls.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}
        usersRolesUrl: http://users-roles.${NAMESPACE}.svc.cluster.local:8080
        securityAttributesProviderUrl: http://security-attributes-provider.${NAMESPACE}.svc.cluster.local:8080
        keycloakUrl: http://keycloak.${NAMESPACE}.svc.cluster.local
        onboardingUrl: http://onboarding.${NAMESPACE}.svc.cluster.local:8080
        ejbcaUrl: http://ejbca-community-helm.${NAMESPACE}.svc.cluster.local:30080
        identityProviderUrl: http://identity-provider.${NAMESPACE}.svc.cluster.local:8080
        authenticationProviderUrl: http://authentication-provider.${NAMESPACE}.svc.cluster.local:8080
        resources:
          requests:
            cpu: "0"
            memory: "0"
  - repoURL: "https://code.europa.eu/api/v4/projects/769/packages/helm/stable"
    path: "''"
    targetRevision: 0.8.0
    chart: simpl-fe
    helm:
      valueFiles:
        - $values/app-values/Simpl-fe/values.yaml
        - $values/app-values/Simpl-fe/values-authority.yaml
      values: |
        hostFe: fe.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}
        cors:
          allowOrigin: https://fe.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX},https://be.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX},http://localhost:4202,http://localhost:4203,http://localhost:3000
        env:
        - name: API_URL
          value: "https://be.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}"
        - name: KEYCLOAK_URL
          value: "https://be.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}/auth"
        - name: KEYCLOAK_REALM
          value: "authority"
        - name: KEYCLOAK_CLIENT_ID
          value: "frontend-cli"
        resources:
          requests:
            cpu: "0"
            memory: "0"
  - repoURL: "https://code.europa.eu/api/v4/projects/861/packages/helm/stable"
    path: ''
    targetRevision: 0.8.0
    chart: security-attributes-provider
    helm:
      valueFiles:
        - $values/app-values/SAP/values.yaml
      values: |
        db:
          url: "jdbc:postgresql://postgresql.${NAMESPACE}.svc.cluster.local:5432/securityattributesprovider"
        microservices:
          identityProviderUrl: http://identity-provider.${NAMESPACE}.svc.cluster.local:8080
          onboardingUrl: http://onboarding.${NAMESPACE}.svc.cluster.local:8080
        resources:
          requests:
            cpu: "0"
            memory: "0"
  - repoURL: "https://code.europa.eu/api/v4/projects/771/packages/helm/stable"
    path: ''
    targetRevision: 0.8.1
    chart: users-roles
    helm:
      valueFiles:
        - $values/app-values/Users-Roles/values.yaml
      values: |
        global:
          hostBe: be.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}
          hostTls: tls.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}
          cors:
            allowOrigin: https://fe.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX},http://localhost:4202,http://localhost:3000
        db:
          url: "jdbc:postgresql://postgresql.${NAMESPACE}.svc.cluster.local:5432/usersroles"
        redis:
          host: "redis-master.${NAMESPACE}.svc.cluster.local"
        microservices:
          authenticationProviderUrl: http://authentication-provider.${NAMESPACE}.svc.cluster.local:8080
          identityProviderUrl: http://identity-provider.${NAMESPACE}.svc.cluster.local:8080
        resources:
          requests:
            cpu: "0"
            memory: "0"
  - repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 19.6.0
    chart: redis
    helm:
      valueFiles:
        - $values/app-values/Redis/values.yaml
      values: |
        fullnameOverride: redis
        master:
          resources:
            requests:
              cpu: "0"
              memory: "0"
          resourcesPreset: none
  - repoURL: "https://code.europa.eu/api/v4/projects/820/packages/helm/stable"
    path: ''
    targetRevision: 0.2.7
    chart: fc-service
    helm:
      valueFiles:
        - $values/app-values/xsfc-catalogue/values.yaml
      values: |
        storage: 
          enabled: false
        podSecurityContext: 
          allowPrivilegeEscalation: false
        ingress:
          enabled: false
        postgres:
          enabled: false
        hashicorp:
          service: http://vault-ha.vault-ha.svc.cluster.local:8200
        secretEngine: ${SECRETENGINE}
        neo4j:
          resources:
          requests:
            cpu: "0"
            memory: "0"
  - repoURL: "https://code.europa.eu/api/v4/projects/770/packages/helm/stable"
    path: ''
    targetRevision: 0.8.0
    chart: onboarding
    helm:
      valueFiles:
        - $values/app-values/onboarding/values.yaml
      values: |
        db:
          url: "jdbc:postgresql://postgresql.${NAMESPACE}.svc.cluster.local:5432/onboarding"
        microservices:
          identityProviderUrl: http://identity-provider.${NAMESPACE}.svc.cluster.local:8080
          usersRolesUrl: http://users-roles.${NAMESPACE}.svc.cluster.local:8080
        resources:
          requests:
            cpu: "0"
            memory: "0"
  - repoURL: "https://code.europa.eu/api/v4/projects/860/packages/helm/stable"
    path: ''
    targetRevision: 0.8.1
    chart: tls-gateway
    helm:
      valueFiles:
        - $values/app-values/tls-gateway/values.yaml
        - $values/app-values/tls-gateway/values-routes-authority.yaml
      values: |
        global:  
          cors:
            allowOrigin: https://fe.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX},https://be.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX},http://localhost:4202,http://localhost:3000
        microservices:
          usersRolesUrl: http://users-roles.${NAMESPACE}.svc.cluster.local:8080
          keycloakUrl: http://keycloak.${NAMESPACE}.svc.cluster.local
          securityAttributesProviderUrl: http://security-attributes-provider.${NAMESPACE}.svc.cluster.local:8080
          identityProviderUrl: http://identity-provider.${NAMESPACE}.svc.cluster.local:8080
          authenticationProviderUrl: http://authentication-provider.${NAMESPACE}.svc.cluster.local:8080
        redis:
          host: "redis-master.${NAMESPACE}.svc.cluster.local"
        hostT2: tls.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}
        resources:
          requests:
            cpu: "0"
            memory: "0"
        appConfig:
          spring:
            cloud:
              gateway:
                routes:
                  - id: sap
                    uri: ${sap.url}
                    predicates:
                      - Path=/sap-api/mtls/**
                    filters:
                      - StripPrefix=1
                  - id: identity-provider
                    uri: ${identity-provider.url}
                    predicates:
                      - Path=/identity-api/mtls/**
                    filters:
                      - StripPrefix=1
                  - id: users-roles
                    uri: ${users-roles.url}
                    predicates:
                      - Path=/user-api/mtls/**
                    filters:
                      - StripPrefix=1
                  - id: fc-service
                    uri: "https://xfsc-service.${NAMESPACE}.svc.cluster.local:8081"
                    predicates:
                      - Path=/fc/**
                    filters:
                      - StripPrefix=1
                  - id: adapter-service
                    uri: "https://adapter.${NAMESPACE}.svc.cluster.local:8084"
                    predicates:
                      - Path=/adapter/**
                    filters:
                      - StripPrefix=1
  - repoURL: "https://code.europa.eu/api/v4/projects/759/packages/helm/stable"
    path: ''
    targetRevision: 0.1.11-SNAPSHOT.440.8ea9076c
    chart: poc-charts
    helm:
      releaseName: adapter
      valueFiles:
        - $values/app-values/adapter/values.yaml
      values: |
        podSecurityContext: 
          allowPrivilegeEscalation: false
        ingress:
          enabled: false
          
        secretEngine: ${SECRETENGINE}
        hashicorp:
          service: http://vault-ha.vault-ha.svc.cluster.local:8200
  - repoURL: "https://code.europa.eu/api/v4/projects/913/packages/helm/stable"
    path: ''
    targetRevision: 0.8.0
    chart: identity-provider
    helm:
      valueFiles:
        - $values/app-values/identity-provider/values.yaml
      values: |
        hostT2: tls.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}
        db:
          url: "jdbc:postgresql://postgresql.${NAMESPACE}.svc.cluster.local:5432/identityprovider"
        redis:
          host: "redis-master.${NAMESPACE}.svc.cluster.local"
        global:
          hostBe: be.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}
          hostFe: fe.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}
          authorityUrl: https://be.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}
          cors:
            allowOrigin: https://fe.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX},http://localhost:4202,http://localhost:3000
        microservices:
          usersRolesUrl: http://users-roles.${NAMESPACE}.svc.cluster.local:8080
          securityAttributesProviderUrl: http://security-attributes-provider.${NAMESPACE}.svc.cluster.local:8080
          onboardingUrl: http://onboarding.${NAMESPACE}.svc.cluster.local:8080
          authenticationProviderUrl: http://authentication-provider.${NAMESPACE}.svc.cluster.local:8080
        ejbca:
          enrollConfig:
            url: "https://ejbca-community-helm.${NAMESPACE}.svc.cluster.local:30443"
          keystore:
            base64: ${BASE64SUPERADMINKEYSTORE}
            password: ${SUPERADMINKEYSTOREPASS}
          truststore: 
            base64: ${BASE64SUPERADMINTRUSTSTORE}
            password: ${SUPERADMINTRUSTSTOREPASS}
        resources:
          requests:
            cpu: "0"
            memory: "0"
  - repoURL: "https://code.europa.eu/api/v4/projects/939/packages/helm/stable"
    path: ''
    targetRevision: 0.8.1
    chart: authentication-provider
    helm:
      valueFiles:
        - $values/app-values/auth-provider/values.yaml
      values: |
        db:
          url: "jdbc:postgresql://postgresql.${NAMESPACE}.svc.cluster.local:5432/authenticationprovider"
        microservices:
          usersRolesUrl: http://users-roles.${NAMESPACE}.svc.cluster.local:8080
        simpl:
          certificate:
            san: "tls.${DOMAINPREFIX}.${NAMESPACETAG}.${DOMAINSUFFIX}"
        resources:
          requests:
            cpu: "0"
            memory: "0"
